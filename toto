
/tmp/toto/a.out:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

00000000000002c4 <.note.ABI-tag>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	10 00                	adc    %al,(%rax)
 2ca:	00 00                	add    %al,(%rax)
 2cc:	01 00                	add    %eax,(%rax)
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 00                	add    %al,(%rax)
 2d5:	00 00                	add    %al,(%rax)
 2d7:	00 03                	add    %al,(%rbx)
 2d9:	00 00                	add    %al,(%rax)
 2db:	00 02                	add    %al,(%rdx)
 2dd:	00 00                	add    %al,(%rax)
 2df:	00 00                	add    %al,(%rax)
 2e1:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

00000000000002e4 <.note.gnu.build-id>:
 2e4:	04 00                	add    $0x0,%al
 2e6:	00 00                	add    %al,(%rax)
 2e8:	14 00                	adc    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	03 00                	add    (%rax),%eax
 2ee:	00 00                	add    %al,(%rax)
 2f0:	47                   	rex.RXB
 2f1:	4e 55                	rex.WRX push %rbp
 2f3:	00 f6                	add    %dh,%dh
 2f5:	94                   	xchg   %eax,%esp
 2f6:	69 a6 8f 6c 78 e9 79 	imul   $0xdb9f9679,-0x16879371(%rsi),%esp
 2fd:	96 9f db 
 300:	2e 1d 5c 3a c2 61    	cs sbb $0x61c23a5c,%eax
 306:	8d                   	.byte 0x8d
 307:	a1                   	.byte 0xa1

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	06                   	(bad)  
 30d:	00 00                	add    %al,(%rax)
 30f:	00 01                	add    %al,(%rcx)
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 06                	add    %al,(%rsi)
 321:	00 00                	add    %al,(%rax)
 323:	00 00                	add    %al,(%rax)
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	3f                   	(bad)  
 349:	00 00                	add    %al,(%rax)
 34b:	00 20                	add    %ah,(%rax)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 0b                	add    %cl,(%rbx)
 361:	00 00                	add    %al,(%rax)
 363:	00 12                	add    %dl,(%rdx)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 21                	add    %ah,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 5b 00             	add    %bl,0x0(%rbx)
 392:	00 00                	add    %al,(%rax)
 394:	20 00                	and    %al,(%rax)
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	6a 00                	pushq  $0x0
 3aa:	00 00                	add    %al,(%rax)
 3ac:	20 00                	and    %al,(%rax)
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	12 00                	adc    (%rax),%al
 3c2:	00 00                	add    %al,(%rax)
 3c4:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

00000000000003d8 <.dynstr>:
 3d8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 3dc:	63 2e                	movslq (%rsi),%ebp
 3de:	73 6f                	jae    44f <_init-0xbb1>
 3e0:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 3e5:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 3ec:	63 78 61             	movslq 0x61(%rax),%edi
 3ef:	5f                   	pop    %rdi
 3f0:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3f6:	7a 65                	jp     45d <_init-0xba3>
 3f8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3fb:	6c                   	insb   (%dx),%es:(%rdi)
 3fc:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 403:	72 74                	jb     479 <_init-0xb87>
 405:	5f                   	pop    %rdi
 406:	6d                   	insl   (%dx),%es:(%rdi)
 407:	61                   	(bad)  
 408:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 40f:	43 5f                	rex.XB pop %r15
 411:	32 2e                	xor    (%rsi),%ch
 413:	32 2e                	xor    (%rsi),%ch
 415:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 41a:	4d 5f                	rex.WRB pop %r15
 41c:	64 65 72 65          	fs gs jb 485 <_init-0xb7b>
 420:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 427:	4d 
 428:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 42a:	6f                   	outsl  %ds:(%rsi),(%dx)
 42b:	6e                   	outsb  %ds:(%rsi),(%dx)
 42c:	65 54                	gs push %rsp
 42e:	61                   	(bad)  
 42f:	62                   	(bad)  
 430:	6c                   	insb   (%dx),%es:(%rdi)
 431:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 435:	67 6d                	insl   (%dx),%es:(%edi)
 437:	6f                   	outsl  %ds:(%rsi),(%dx)
 438:	6e                   	outsb  %ds:(%rsi),(%dx)
 439:	5f                   	pop    %rdi
 43a:	73 74                	jae    4b0 <_init-0xb50>
 43c:	61                   	(bad)  
 43d:	72 74                	jb     4b3 <_init-0xb4d>
 43f:	5f                   	pop    %rdi
 440:	5f                   	pop    %rdi
 441:	00 5f 49             	add    %bl,0x49(%rdi)
 444:	54                   	push   %rsp
 445:	4d 5f                	rex.WRB pop %r15
 447:	72 65                	jb     4ae <_init-0xb52>
 449:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 450:	4d 
 451:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 453:	6f                   	outsl  %ds:(%rsi),(%dx)
 454:	6e                   	outsb  %ds:(%rsi),(%dx)
 455:	65 54                	gs push %rsp
 457:	61                   	(bad)  
 458:	62                   	.byte 0x62
 459:	6c                   	insb   (%dx),%es:(%rdi)
 45a:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000045c <.gnu.version>:
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	02 00                	add    (%rax),%al
 462:	02 00                	add    (%rax),%al
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000470 <.gnu.version_r>:
 470:	01 00                	add    %eax,(%rax)
 472:	01 00                	add    %eax,(%rax)
 474:	01 00                	add    %eax,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	10 00                	adc    %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	75 1a                	jne    49c <_init-0xb64>
 482:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 488:	33 00                	xor    (%rax),%eax
 48a:	00 00                	add    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000490 <.rela.dyn>:
 490:	e8 3d 00 00 00       	callq  4d2 <_init-0xb2e>
 495:	00 00                	add    %al,(%rax)
 497:	00 08                	add    %cl,(%rax)
 499:	00 00                	add    %al,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 30                	add    %dh,(%rax)
 4a1:	11 00                	adc    %eax,(%rax)
 4a3:	00 00                	add    %al,(%rax)
 4a5:	00 00                	add    %al,(%rax)
 4a7:	00 f0                	add    %dh,%al
 4a9:	3d 00 00 00 00       	cmp    $0x0,%eax
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	f0 10 00             	lock adc %al,(%rax)
 4bb:	00 00                	add    %al,(%rax)
 4bd:	00 00                	add    %al,(%rax)
 4bf:	00 28                	add    %ch,(%rax)
 4c1:	40 00 00             	add    %al,(%rax)
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	08 00                	or     %al,(%rax)
 4ca:	00 00                	add    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	28 40 00             	sub    %al,0x0(%rax)
 4d3:	00 00                	add    %al,(%rax)
 4d5:	00 00                	add    %al,(%rax)
 4d7:	00 d8                	add    %bl,%al
 4d9:	3f                   	(bad)  
 4da:	00 00                	add    %al,(%rax)
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	06                   	(bad)  
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 01                	add    %al,(%rcx)
	...
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 e0                	add    %ah,%al
 4f1:	3f                   	(bad)  
 4f2:	00 00                	add    %al,(%rax)
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	06                   	(bad)  
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 03                	add    %al,(%rbx)
	...
 505:	00 00                	add    %al,(%rax)
 507:	00 e8                	add    %ch,%al
 509:	3f                   	(bad)  
 50a:	00 00                	add    %al,(%rax)
 50c:	00 00                	add    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	06                   	(bad)  
 511:	00 00                	add    %al,(%rax)
 513:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 51e:	00 00                	add    %al,(%rax)
 520:	f0 3f                	lock (bad) 
 522:	00 00                	add    %al,(%rax)
 524:	00 00                	add    %al,(%rax)
 526:	00 00                	add    %al,(%rax)
 528:	06                   	(bad)  
 529:	00 00                	add    %al,(%rax)
 52b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 531 <_init-0xacf>
 531:	00 00                	add    %al,(%rax)
 533:	00 00                	add    %al,(%rax)
 535:	00 00                	add    %al,(%rax)
 537:	00 f8                	add    %bh,%al
 539:	3f                   	(bad)  
 53a:	00 00                	add    %al,(%rax)
 53c:	00 00                	add    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	06                   	(bad)  
 541:	00 00                	add    %al,(%rax)
 543:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .rela.plt:

0000000000000550 <.rela.plt>:
 550:	18 40 00             	sbb    %al,0x0(%rax)
 553:	00 00                	add    %al,(%rax)
 555:	00 00                	add    %al,(%rax)
 557:	00 07                	add    %al,(%rdi)
 559:	00 00                	add    %al,(%rax)
 55b:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1046:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001050 <_start>:
    1050:	31 ed                	xor    %ebp,%ebp
    1052:	49 89 d1             	mov    %rdx,%r9
    1055:	5e                   	pop    %rsi
    1056:	48 89 e2             	mov    %rsp,%rdx
    1059:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    105d:	50                   	push   %rax
    105e:	54                   	push   %rsp
    105f:	4c 8d 05 5a 01 00 00 	lea    0x15a(%rip),%r8        # 11c0 <__libc_csu_fini>
    1066:	48 8d 0d f3 00 00 00 	lea    0xf3(%rip),%rcx        # 1160 <__libc_csu_init>
    106d:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1135 <main>
    1074:	ff 15 66 2f 00 00    	callq  *0x2f66(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    107a:	f4                   	hlt    
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <deregister_tm_clones>:
    1080:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 4030 <__TMC_END__>
    1087:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 4030 <__TMC_END__>
    108e:	48 39 f8             	cmp    %rdi,%rax
    1091:	74 15                	je     10a8 <deregister_tm_clones+0x28>
    1093:	48 8b 05 3e 2f 00 00 	mov    0x2f3e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    109a:	48 85 c0             	test   %rax,%rax
    109d:	74 09                	je     10a8 <deregister_tm_clones+0x28>
    109f:	ff e0                	jmpq   *%rax
    10a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10a8:	c3                   	retq   
    10a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010b0 <register_tm_clones>:
    10b0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4030 <__TMC_END__>
    10b7:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 4030 <__TMC_END__>
    10be:	48 29 fe             	sub    %rdi,%rsi
    10c1:	48 c1 fe 03          	sar    $0x3,%rsi
    10c5:	48 89 f0             	mov    %rsi,%rax
    10c8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10cc:	48 01 c6             	add    %rax,%rsi
    10cf:	48 d1 fe             	sar    %rsi
    10d2:	74 14                	je     10e8 <register_tm_clones+0x38>
    10d4:	48 8b 05 15 2f 00 00 	mov    0x2f15(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10db:	48 85 c0             	test   %rax,%rax
    10de:	74 08                	je     10e8 <register_tm_clones+0x38>
    10e0:	ff e0                	jmpq   *%rax
    10e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10e8:	c3                   	retq   
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <__do_global_dtors_aux>:
    10f0:	80 3d 39 2f 00 00 00 	cmpb   $0x0,0x2f39(%rip)        # 4030 <__TMC_END__>
    10f7:	75 2f                	jne    1128 <__do_global_dtors_aux+0x38>
    10f9:	55                   	push   %rbp
    10fa:	48 83 3d f6 2e 00 00 	cmpq   $0x0,0x2ef6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1101:	00 
    1102:	48 89 e5             	mov    %rsp,%rbp
    1105:	74 0c                	je     1113 <__do_global_dtors_aux+0x23>
    1107:	48 8b 3d 1a 2f 00 00 	mov    0x2f1a(%rip),%rdi        # 4028 <__dso_handle>
    110e:	e8 2d ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1113:	e8 68 ff ff ff       	callq  1080 <deregister_tm_clones>
    1118:	c6 05 11 2f 00 00 01 	movb   $0x1,0x2f11(%rip)        # 4030 <__TMC_END__>
    111f:	5d                   	pop    %rbp
    1120:	c3                   	retq   
    1121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1128:	c3                   	retq   
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <frame_dummy>:
    1130:	e9 7b ff ff ff       	jmpq   10b0 <register_tm_clones>

0000000000001135 <main>:
    1135:	55                   	push   %rbp
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	48 8d 3d c4 0e 00 00 	lea    0xec4(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1140:	b8 00 00 00 00       	mov    $0x0,%eax
    1145:	e8 e6 fe ff ff       	callq  1030 <printf@plt>
    114a:	b8 00 00 00 00       	mov    $0x0,%eax
    114f:	5d                   	pop    %rbp
    1150:	c3                   	retq   
    1151:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1158:	00 00 00 
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <__libc_csu_init>:
    1160:	41 57                	push   %r15
    1162:	49 89 d7             	mov    %rdx,%r15
    1165:	41 56                	push   %r14
    1167:	49 89 f6             	mov    %rsi,%r14
    116a:	41 55                	push   %r13
    116c:	41 89 fd             	mov    %edi,%r13d
    116f:	41 54                	push   %r12
    1171:	4c 8d 25 70 2c 00 00 	lea    0x2c70(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1178:	55                   	push   %rbp
    1179:	48 8d 2d 70 2c 00 00 	lea    0x2c70(%rip),%rbp        # 3df0 <__init_array_end>
    1180:	53                   	push   %rbx
    1181:	4c 29 e5             	sub    %r12,%rbp
    1184:	48 83 ec 08          	sub    $0x8,%rsp
    1188:	e8 73 fe ff ff       	callq  1000 <_init>
    118d:	48 c1 fd 03          	sar    $0x3,%rbp
    1191:	74 1b                	je     11ae <__libc_csu_init+0x4e>
    1193:	31 db                	xor    %ebx,%ebx
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	4c 89 fa             	mov    %r15,%rdx
    119b:	4c 89 f6             	mov    %r14,%rsi
    119e:	44 89 ef             	mov    %r13d,%edi
    11a1:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    11a5:	48 83 c3 01          	add    $0x1,%rbx
    11a9:	48 39 dd             	cmp    %rbx,%rbp
    11ac:	75 ea                	jne    1198 <__libc_csu_init+0x38>
    11ae:	48 83 c4 08          	add    $0x8,%rsp
    11b2:	5b                   	pop    %rbx
    11b3:	5d                   	pop    %rbp
    11b4:	41 5c                	pop    %r12
    11b6:	41 5d                	pop    %r13
    11b8:	41 5e                	pop    %r14
    11ba:	41 5f                	pop    %r15
    11bc:	c3                   	retq   
    11bd:	0f 1f 00             	nopl   (%rax)

00000000000011c0 <__libc_csu_fini>:
    11c0:	c3                   	retq   

Disassembly of section .fini:

00000000000011c4 <_fini>:
    11c4:	48 83 ec 08          	sub    $0x8,%rsp
    11c8:	48 83 c4 08          	add    $0x8,%rsp
    11cc:	c3                   	retq   
    11cd:	46 61                	rex.RX (bad) 
    11cf:	6d                   	insl   (%dx),%es:(%rdi)
    11d0:	69 6e 65 20 76 65 72 	imul   $0x72657620,0x65(%rsi),%ebp
    11d7:	73 69                	jae    1242 <_fini+0x7e>
    11d9:	6f                   	outsl  %ds:(%rsi),(%dx)
    11da:	6e                   	outsb  %ds:(%rsi),(%dx)
    11db:	20 31                	and    %dh,(%rcx)
    11dd:	2e 30 20             	xor    %ah,%cs:(%rax)
    11e0:	28 63 29             	sub    %ah,0x29(%rbx)
    11e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    11e4:	64 65 64 20 62 79    	fs gs and %ah,%fs:0x79(%rdx)
    11ea:	20 3c 6a             	and    %bh,(%rdx,%rbp,2)
    11ed:	67 6f                	outsl  %ds:(%esi),(%dx)
    11ef:	75 6e                	jne    125f <_fini+0x9b>
    11f1:	61                   	(bad)  
    11f2:	6e                   	outsb  %ds:(%rsi),(%dx)
    11f3:	64 3e 2d 3c 61 66 69 	fs ds sub $0x6966613c,%eax
    11fa:	6f                   	outsl  %ds:(%rsi),(%dx)
    11fb:	64 69 65 72 3e 20 2d 	imul   $0x202d203e,%fs:0x72(%rbp),%esp
    1202:	20 
    1203:	30 30                	xor    %dh,(%rax)
    1205:	30 30                	xor    %dh,(%rax)
    1207:	30 30                	xor    %dh,(%rax)
    1209:	30 31                	xor    %dh,(%rcx)
    120b:	e8 12 00 00 00       	callq  1222 <_fini+0x5e>
    1210:	bf 00 00 00 00       	mov    $0x0,%edi
    1215:	e8 8f 00 00 00       	callq  12a9 <_fini+0xe5>
    121a:	e9 87 1e 00 00       	jmpq   30a6 <__FRAME_END__+0xf52>
    121f:	90                   	nop
    1220:	5d                   	pop    %rbp
    1221:	c3                   	retq   
    1222:	55                   	push   %rbp
    1223:	48 89 e5             	mov    %rsp,%rbp
    1226:	48 83 ec 20          	sub    $0x20,%rsp
    122a:	ba 01 00 00 00       	mov    $0x1,%edx
    122f:	48 8d 35 c1 1f 00 00 	lea    0x1fc1(%rip),%rsi        # 31f7 <__FRAME_END__+0x10a3>
    1236:	bf 01 00 00 00       	mov    $0x1,%edi
    123b:	e8 1f 01 00 00       	callq  135f <_fini+0x19b>
    1240:	e8 3d 01 00 00       	callq  1382 <_fini+0x1be>
    1245:	84 c0                	test   %al,%al
    1247:	74 07                	je     1250 <_fini+0x8c>
    1249:	b8 01 00 00 00       	mov    $0x1,%eax
    124e:	eb 37                	jmp    1287 <_fini+0xc3>
    1250:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1257:	00 
    1258:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    125f:	00 
    1260:	e8 24 00 00 00       	callq  1289 <_fini+0xc5>
    1265:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1268:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    126c:	75 14                	jne    1282 <_fini+0xbe>
    126e:	b8 00 00 00 00       	mov    $0x0,%eax
    1273:	e8 e2 09 00 00       	callq  1c5a <_fini+0xa96>
    1278:	bf 00 00 00 00       	mov    $0x0,%edi
    127d:	e8 27 00 00 00       	callq  12a9 <_fini+0xe5>
    1282:	b8 00 00 00 00       	mov    $0x0,%eax
    1287:	c9                   	leaveq 
    1288:	c3                   	retq   
    1289:	55                   	push   %rbp
    128a:	48 89 e5             	mov    %rsp,%rbp
    128d:	b8 39 00 00 00       	mov    $0x39,%eax
    1292:	0f 05                	syscall 
    1294:	5d                   	pop    %rbp
    1295:	c3                   	retq   
    1296:	55                   	push   %rbp
    1297:	48 89 e5             	mov    %rsp,%rbp
    129a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    129d:	b8 03 00 00 00       	mov    $0x3,%eax
    12a2:	8b 7d fc             	mov    -0x4(%rbp),%edi
    12a5:	0f 05                	syscall 
    12a7:	5d                   	pop    %rbp
    12a8:	c3                   	retq   
    12a9:	55                   	push   %rbp
    12aa:	48 89 e5             	mov    %rsp,%rbp
    12ad:	89 7d fc             	mov    %edi,-0x4(%rbp)
    12b0:	b8 3c 00 00 00       	mov    $0x3c,%eax
    12b5:	8b 7d fc             	mov    -0x4(%rbp),%edi
    12b8:	0f 05                	syscall 
    12ba:	5d                   	pop    %rbp
    12bb:	c3                   	retq   
    12bc:	55                   	push   %rbp
    12bd:	48 89 e5             	mov    %rsp,%rbp
    12c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    12c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    12c8:	b8 52 00 00 00       	mov    $0x52,%eax
    12cd:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    12d1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    12d5:	0f 05                	syscall 
    12d7:	5d                   	pop    %rbp
    12d8:	c3                   	retq   
    12d9:	55                   	push   %rbp
    12da:	48 89 e5             	mov    %rsp,%rbp
    12dd:	89 7d fc             	mov    %edi,-0x4(%rbp)
    12e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    12e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    12e8:	b8 00 00 00 00       	mov    $0x0,%eax
    12ed:	8b 7d fc             	mov    -0x4(%rbp),%edi
    12f0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    12f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    12f8:	0f 05                	syscall 
    12fa:	5d                   	pop    %rbp
    12fb:	c3                   	retq   
    12fc:	55                   	push   %rbp
    12fd:	48 89 e5             	mov    %rsp,%rbp
    1300:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1304:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1307:	89 55 f0             	mov    %edx,-0x10(%rbp)
    130a:	b8 02 00 00 00       	mov    $0x2,%eax
    130f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1313:	8b 75 f4             	mov    -0xc(%rbp),%esi
    1316:	8b 55 f0             	mov    -0x10(%rbp),%edx
    1319:	0f 05                	syscall 
    131b:	5d                   	pop    %rbp
    131c:	c3                   	retq   
    131d:	55                   	push   %rbp
    131e:	48 89 e5             	mov    %rsp,%rbp
    1321:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1324:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1328:	89 55 f8             	mov    %edx,-0x8(%rbp)
    132b:	b8 d9 00 00 00       	mov    $0xd9,%eax
    1330:	8b 7d fc             	mov    -0x4(%rbp),%edi
    1333:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1337:	8b 55 f8             	mov    -0x8(%rbp),%edx
    133a:	0f 05                	syscall 
    133c:	5d                   	pop    %rbp
    133d:	c3                   	retq   
    133e:	55                   	push   %rbp
    133f:	48 89 e5             	mov    %rsp,%rbp
    1342:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1345:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1349:	89 55 f8             	mov    %edx,-0x8(%rbp)
    134c:	b8 08 00 00 00       	mov    $0x8,%eax
    1351:	8b 7d fc             	mov    -0x4(%rbp),%edi
    1354:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1358:	8b 55 f8             	mov    -0x8(%rbp),%edx
    135b:	0f 05                	syscall 
    135d:	5d                   	pop    %rbp
    135e:	c3                   	retq   
    135f:	55                   	push   %rbp
    1360:	48 89 e5             	mov    %rsp,%rbp
    1363:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1366:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    136a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    136e:	b8 01 00 00 00       	mov    $0x1,%eax
    1373:	8b 7d fc             	mov    -0x4(%rbp),%edi
    1376:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    137a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    137e:	0f 05                	syscall 
    1380:	5d                   	pop    %rbp
    1381:	c3                   	retq   
    1382:	55                   	push   %rbp
    1383:	48 89 e5             	mov    %rsp,%rbp
    1386:	48 81 ec b0 01 00 00 	sub    $0x1b0,%rsp
    138d:	bf 18 00 00 00       	mov    $0x18,%edi
    1392:	e8 e6 02 00 00       	callq  167d <_fini+0x4b9>
    1397:	ba 00 00 00 00       	mov    $0x0,%edx
    139c:	be 00 00 00 00       	mov    $0x0,%esi
    13a1:	48 8d 3d 51 1e 00 00 	lea    0x1e51(%rip),%rdi        # 31f9 <__FRAME_END__+0x10a5>
    13a8:	e8 4f ff ff ff       	callq  12fc <_fini+0x138>
    13ad:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    13b0:	48 8d 3d 54 1e 00 00 	lea    0x1e54(%rip),%rdi        # 320b <__FRAME_END__+0x10b7>
    13b7:	e8 7d 03 00 00       	callq  1739 <_fini+0x575>
    13bc:	eb 49                	jmp    1407 <_fini+0x243>
    13be:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13c1:	48 63 d0             	movslq %eax,%rdx
    13c4:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    13cb:	48 8d 35 51 1e 00 00 	lea    0x1e51(%rip),%rsi        # 3223 <__FRAME_END__+0x10cf>
    13d2:	48 89 c7             	mov    %rax,%rdi
    13d5:	e8 e8 04 00 00       	callq  18c2 <_fini+0x6fe>
    13da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    13e3:	74 22                	je     1407 <_fini+0x243>
    13e5:	48 83 45 f0 0a       	addq   $0xa,-0x10(%rbp)
    13ea:	eb 05                	jmp    13f1 <_fini+0x22d>
    13ec:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    13f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    13f5:	0f b6 00             	movzbl (%rax),%eax
    13f8:	3c 09                	cmp    $0x9,%al
    13fa:	74 f0                	je     13ec <_fini+0x228>
    13fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1400:	0f b6 00             	movzbl (%rax),%eax
    1403:	3c 20                	cmp    $0x20,%al
    1405:	74 e5                	je     13ec <_fini+0x228>
    1407:	48 8d 8d d0 fe ff ff 	lea    -0x130(%rbp),%rcx
    140e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1411:	ba 00 01 00 00       	mov    $0x100,%edx
    1416:	48 89 ce             	mov    %rcx,%rsi
    1419:	89 c7                	mov    %eax,%edi
    141b:	e8 b9 fe ff ff       	callq  12d9 <_fini+0x115>
    1420:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1423:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    1427:	7f 95                	jg     13be <_fini+0x1fa>
    1429:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    142c:	89 c7                	mov    %eax,%edi
    142e:	e8 63 fe ff ff       	callq  1296 <_fini+0xd2>
    1433:	ba 00 00 00 00       	mov    $0x0,%edx
    1438:	be 00 00 01 00       	mov    $0x10000,%esi
    143d:	48 8d 3d ea 1d 00 00 	lea    0x1dea(%rip),%rdi        # 322e <__FRAME_END__+0x10da>
    1444:	e8 b3 fe ff ff       	callq  12fc <_fini+0x138>
    1449:	89 45 e0             	mov    %eax,-0x20(%rbp)
    144c:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    1450:	7f 16                	jg     1468 <_fini+0x2a4>
    1452:	48 8d 3d dc 1d 00 00 	lea    0x1ddc(%rip),%rdi        # 3235 <__FRAME_END__+0x10e1>
    1459:	e8 db 02 00 00       	callq  1739 <_fini+0x575>
    145e:	b8 01 00 00 00       	mov    $0x1,%eax
    1463:	e9 13 02 00 00       	jmpq   167b <_fini+0x4b7>
    1468:	48 8d 3d d9 1d 00 00 	lea    0x1dd9(%rip),%rdi        # 3248 <__FRAME_END__+0x10f4>
    146f:	e8 c5 02 00 00       	callq  1739 <_fini+0x575>
    1474:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    147b:	ba                   	.byte 0xba
    147c:	06                   	(bad)  
	...

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	54                   	push   %rsp
    2005:	4f 54                	rex.WRXB push %r12
    2007:	4f 54                	rex.WRXB push %r12
    2009:	20 65 73             	and    %ah,0x73(%rbp)
    200c:	74 20                	je     202e <__GNU_EH_FRAME_HDR+0x1a>
    200e:	6c                   	insb   (%dx),%es:(%rdi)
    200f:	61                   	(bad)  
	...

Disassembly of section .eh_frame_hdr:

0000000000002014 <__GNU_EH_FRAME_HDR>:
    2014:	01 1b                	add    %ebx,(%rbx)
    2016:	03 3b                	add    (%rbx),%edi
    2018:	38 00                	cmp    %al,(%rax)
    201a:	00 00                	add    %al,(%rax)
    201c:	06                   	(bad)  
    201d:	00 00                	add    %al,(%rax)
    201f:	00 0c f0             	add    %cl,(%rax,%rsi,8)
    2022:	ff                   	(bad)  
    2023:	ff 84 00 00 00 2c f0 	incl   -0xfd40000(%rax,%rax,1)
    202a:	ff                   	(bad)  
    202b:	ff ac 00 00 00 3c f0 	ljmp   *-0xfc40000(%rax,%rax,1)
    2032:	ff                   	(bad)  
    2033:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
    2037:	00 21                	add    %ah,(%rcx)
    2039:	f1                   	icebp  
    203a:	ff                   	(bad)  
    203b:	ff c4                	inc    %esp
    203d:	00 00                	add    %al,(%rax)
    203f:	00 4c f1 ff          	add    %cl,-0x1(%rcx,%rsi,8)
    2043:	ff e4                	jmpq   *%rsp
    2045:	00 00                	add    %al,(%rax)
    2047:	00 ac f1 ff ff 2c 01 	add    %ch,0x12cffff(%rcx,%rsi,8)
	...

Disassembly of section .eh_frame:

0000000000002050 <__FRAME_END__-0x104>:
    2050:	14 00                	adc    $0x0,%al
    2052:	00 00                	add    %al,(%rax)
    2054:	00 00                	add    %al,(%rax)
    2056:	00 00                	add    %al,(%rax)
    2058:	01 7a 52             	add    %edi,0x52(%rdx)
    205b:	00 01                	add    %al,(%rcx)
    205d:	78 10                	js     206f <__GNU_EH_FRAME_HDR+0x5b>
    205f:	01 1b                	add    %ebx,(%rbx)
    2061:	0c 07                	or     $0x7,%al
    2063:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2069:	00 00                	add    %al,(%rax)
    206b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    206e:	00 00                	add    %al,(%rax)
    2070:	e0 ef                	loopne 2061 <__GNU_EH_FRAME_HDR+0x4d>
    2072:	ff                   	(bad)  
    2073:	ff 2b                	ljmp   *(%rbx)
	...
    207d:	00 00                	add    %al,(%rax)
    207f:	00 14 00             	add    %dl,(%rax,%rax,1)
    2082:	00 00                	add    %al,(%rax)
    2084:	00 00                	add    %al,(%rax)
    2086:	00 00                	add    %al,(%rax)
    2088:	01 7a 52             	add    %edi,0x52(%rdx)
    208b:	00 01                	add    %al,(%rcx)
    208d:	78 10                	js     209f <__GNU_EH_FRAME_HDR+0x8b>
    208f:	01 1b                	add    %ebx,(%rbx)
    2091:	0c 07                	or     $0x7,%al
    2093:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2099:	00 00                	add    %al,(%rax)
    209b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    209e:	00 00                	add    %al,(%rax)
    20a0:	80 ef ff             	sub    $0xff,%bh
    20a3:	ff 20                	jmpq   *(%rax)
    20a5:	00 00                	add    %al,(%rax)
    20a7:	00 00                	add    %al,(%rax)
    20a9:	0e                   	(bad)  
    20aa:	10 46 0e             	adc    %al,0xe(%rsi)
    20ad:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b0:	0b 77 08             	or     0x8(%rdi),%esi
    20b3:	80 00 3f             	addb   $0x3f,(%rax)
    20b6:	1a 3b                	sbb    (%rbx),%bh
    20b8:	2a 33                	sub    (%rbx),%dh
    20ba:	24 22                	and    $0x22,%al
    20bc:	00 00                	add    %al,(%rax)
    20be:	00 00                	add    %al,(%rax)
    20c0:	14 00                	adc    $0x0,%al
    20c2:	00 00                	add    %al,(%rax)
    20c4:	44 00 00             	add    %r8b,(%rax)
    20c7:	00 78 ef             	add    %bh,-0x11(%rax)
    20ca:	ff                   	(bad)  
    20cb:	ff 08                	decl   (%rax)
	...
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20da:	00 00                	add    %al,(%rax)
    20dc:	5c                   	pop    %rsp
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 55 f0             	add    %dl,-0x10(%rbp)
    20e2:	ff                   	(bad)  
    20e3:	ff 1c 00             	lcall  *(%rax,%rax,1)
    20e6:	00 00                	add    %al,(%rax)
    20e8:	00 41 0e             	add    %al,0xe(%rcx)
    20eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    20f1:	57                   	push   %rdi
    20f2:	0c 07                	or     $0x7,%al
    20f4:	08 00                	or     %al,(%rax)
    20f6:	00 00                	add    %al,(%rax)
    20f8:	44 00 00             	add    %r8b,(%rax)
    20fb:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
    20ff:	00 60 f0             	add    %ah,-0x10(%rax)
    2102:	ff                   	(bad)  
    2103:	ff 5d 00             	lcall  *0x0(%rbp)
    2106:	00 00                	add    %al,(%rax)
    2108:	00 42 0e             	add    %al,0xe(%rdx)
    210b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
    2111:	8e 03                	mov    (%rbx),%es
    2113:	45 0e                	rex.RB (bad) 
    2115:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    211b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86302f69 <_end+0xffffffff862fef31>
    2121:	06                   	(bad)  
    2122:	48 0e                	rex.W (bad) 
    2124:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    212a:	6a 0e                	pushq  $0xe
    212c:	38 41 0e             	cmp    %al,0xe(%rcx)
    212f:	30 41 0e             	xor    %al,0xe(%rcx)
    2132:	28 42 0e             	sub    %al,0xe(%rdx)
    2135:	20 42 0e             	and    %al,0xe(%rdx)
    2138:	18 42 0e             	sbb    %al,0xe(%rdx)
    213b:	10 42 0e             	adc    %al,0xe(%rdx)
    213e:	08 00                	or     %al,(%rax)
    2140:	10 00                	adc    %al,(%rax)
    2142:	00 00                	add    %al,(%rax)
    2144:	c4                   	(bad)  
    2145:	00 00                	add    %al,(%rax)
    2147:	00 78 f0             	add    %bh,-0x10(%rax)
    214a:	ff                   	(bad)  
    214b:	ff 01                	incl   (%rcx)
    214d:	00 00                	add    %al,(%rax)
    214f:	00 00                	add    %al,(%rax)
    2151:	00 00                	add    %al,(%rax)
	...

0000000000002154 <__FRAME_END__>:
    2154:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	30 11                	xor    %dl,(%rcx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	f0 10 00             	lock adc %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	01 00                	add    %eax,(%rax)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	0c 00                	or     $0x0,%al
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 c4                	add    %al,%ah
    3e21:	11 00                	adc    %eax,(%rax)
    3e23:	00 00                	add    %al,(%rax)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 19                	add    %bl,(%rcx)
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 e8                	add    %ch,%al
    3e31:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e36:	00 00                	add    %al,(%rax)
    3e38:	1b 00                	sbb    (%rax),%eax
    3e3a:	00 00                	add    %al,(%rax)
    3e3c:	00 00                	add    %al,(%rax)
    3e3e:	00 00                	add    %al,(%rax)
    3e40:	08 00                	or     %al,(%rax)
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	1a 00                	sbb    (%rax),%al
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	f0 3d 00 00 00 00    	lock cmp $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 d8                	add    %bl,%al
    3e81:	03 00                	add    (%rax),%eax
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 06                	add    %al,(%rsi)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 84 00 00 00 00 00 	add    %al,0x0(%rax,%rax,1)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	0b 00                	or     (%rax),%eax
    3eaa:	00 00                	add    %al,(%rax)
    3eac:	00 00                	add    %al,(%rax)
    3eae:	00 00                	add    %al,(%rax)
    3eb0:	18 00                	sbb    %al,(%rax)
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	15 00 00 00 00       	adc    $0x0,%eax
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	18 00                	sbb    %al,(%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	14 00                	adc    $0x0,%al
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 50 05             	add    %dl,0x5(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 70 04             	add    %dh,0x4(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 5c 04 00          	add    %bl,0x0(%rsp,%rax,1)
    3f73:	00 00                	add    %al,(%rax)
    3f75:	00 00                	add    %al,(%rax)
    3f77:	00 f9                	add    %bh,%cl
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004020 <__data_start>:
	...

0000000000004028 <__dso_handle>:
    4028:	28 40 00             	sub    %al,0x0(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004030 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 38 2e 33 	imul   $0x332e3820,0x6e(%rcx),%esp
  10:	2e 30 2d 36 29 20 38 	xor    %ch,%cs:0x38202936(%rip)        # 3820294d <_end+0x381fe915>
  17:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  1a:	30 00                	xor    %al,(%rax)
